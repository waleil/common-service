<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.net.yzl.pm.mapper.RoleMenuMapper">
  <resultMap id="BaseResultMap" type="cn.net.yzl.pm.entity.RoleMenu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="menu_id" jdbcType="INTEGER" property="menuId" />
    <result column="is_edit" jdbcType="INTEGER" property="isEdit" />
    <result column="is_look" jdbcType="INTEGER" property="isLook" />
    <result column="is_admin" jdbcType="INTEGER" property="isAdmin" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_code" jdbcType="VARCHAR" property="createCode" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_code" jdbcType="VARCHAR" property="updateCode" />

    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="menu_path" jdbcType="VARCHAR" property="menuPath" />
    <result column="parent_id" jdbcType="INTEGER" property="menuParentId" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, menu_id, is_edit, is_look, is_admin, create_time, create_code, update_time, update_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role_menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role_menu
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteRoleMenuInfoByRoleId" parameterType="java.lang.Integer">
   DELETE FROM role_menu
   WHERE role_id = #{roleId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="cn.net.yzl.pm.entity.RoleMenu">
    insert into role_menu (id, role_id, menu_id, is_edit,is_look,is_admin,
      create_time, create_code, update_time, update_code)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{menuId,jdbcType=INTEGER},
      #{isEdit,jdbcType=INTEGER}, #{isLook,jdbcType=INTEGER}, #{isAdmin,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{createCode,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
      #{updateCode,jdbcType=VARCHAR})
  </insert>

  <!--批量创建角色和菜单关联信息绑定-->
  <insert id="batchCreateRoleMenuInfoList" parameterType="java.util.List">
    INSERT INTO role_menu
    (role_id, menu_id,is_edit,is_look,is_admin,create_code)
    VALUES
    <foreach collection="list" item="item" separator=",">
      (#{item.roleId,jdbcType=INTEGER}, #{item.menuId,jdbcType=INTEGER},
      #{item.isEdit,jdbcType=INTEGER}, #{item.isLook,jdbcType=INTEGER},
      #{item.isAdmin,jdbcType=INTEGER}, #{item.createCode,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>

  <!--批量修改角色和菜单关联信息绑定-->
  <update id="batchUpdateRoleMenuInfoList" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";">
      UPDATE role_menu
      <set>
        <if test="item.isEdit != null">
          is_edit = #{item.isEdit,jdbcType=INTEGER},
        </if>
        <if test="item.isLook != null">
          is_look = #{item.isLook,jdbcType=INTEGER},
        </if>
        <if test="item.isAdmin != null">
          is_admin = #{item.isAdmin,jdbcType=INTEGER},
        </if>
      </set>
      where id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>

  <insert id="insertSelective" parameterType="cn.net.yzl.pm.entity.RoleMenu">
    insert into role_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="isEdit != null">
        is_edit,
      </if>
      <if test="isLook != null">
        is_look,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createCode != null">
        create_code,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateCode != null">
        update_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null">
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="isEdit != null">
        #{isEdit,jdbcType=INTEGER},
      </if>
      <if test="isLook != null">
        #{isLook,jdbcType=INTEGER},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createCode != null">
        #{createCode,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateCode != null">
        #{updateCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.yzl.pm.entity.RoleMenu">
    update role_menu
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null">
        menu_id = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="isEdit != null">
        is_edit = #{isEdit,jdbcType=INTEGER},
      </if>
      <if test="isLook != null">
        is_look = #{isLook,jdbcType=INTEGER},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createCode != null">
        create_code = #{createCode,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateCode != null">
        update_code = #{updateCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.yzl.pm.entity.RoleMenu">
    update role_menu
    set role_id = #{roleId,jdbcType=INTEGER},
      menu_id = #{menuId,jdbcType=INTEGER},
      is_edit = #{isEdit,jdbcType=INTEGER},
      is_look = #{isLook,jdbcType=INTEGER},
      is_admin = #{isAdmin,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_code = #{createCode,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_code = #{updateCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--根据角色id查询对应的菜单id信息-->
  <select id="getRoleMenuListByRoleIds" resultType="cn.net.yzl.pm.model.vo.RoleMenuPermissionVO">
    SELECT
      rm.menu_id AS menuId,
      max(rm.is_edit) AS isEdit,
      max(rm.is_look) AS isLook,
      max(rm.is_admin) AS isAdmin
    FROM
    role_menu rm
    LEFT JOIN role r ON r.id = rm.role_id
    WHERE r.is_enable = 1 AND r.is_del = 0 AND rm.role_Id IN
    <foreach collection="roleIds" item="roleId" index="index" open="(" close=")" separator=",">
      #{roleId,jdbcType=INTEGER}
    </foreach>
    GROUP BY rm.menu_id
  </select>

  <!--根据角色id查询对应的菜单信息-->
  <select id="getRoleMenuListByRoleId" parameterType="java.lang.Integer" resultType="cn.net.yzl.pm.entity.RoleMenu">
    SELECT
     rm.id AS id,
     m.id AS menuId,
     m.menu_name AS menuName,
     m.menu_path AS menuPath,
     m.parent_id AS menuParentId,
     m.order_num AS orderNum,
     IFNULL(rm.is_edit,0) AS isEdit,
     IFNULL(rm.is_look,0) AS isLook,
     IFNULL(rm.is_admin,0) AS isAdmin
    FROM menu m
    LEFT JOIN role_menu rm ON m.id = rm.menu_id
    AND rm.role_id = #{roleId,jdbcType=INTEGER}
    WHERE m.is_enable = 1 AND m.is_del = 0
    ORDER BY m.id
  </select>

  <select id="getRoleIdsByMenuId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT
         DISTINCT
         role_id
        FROM
         role_menu
        WHERE menu_id = #{menuId,jdbcType=INTEGER}
    </select>

</mapper>